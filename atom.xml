<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Green&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://limaolong.cn/"/>
  <updated>2016-03-27T08:26:11.160Z</updated>
  <id>http://limaolong.cn/</id>
  
  <author>
    <name>Green Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【Ubuntu学习】Linux中alias的使用</title>
    <link href="http://limaolong.cn/2015/10/25/ubuntu-how_to_use_alias/"/>
    <id>http://limaolong.cn/2015/10/25/ubuntu-how_to_use_alias/</id>
    <published>2015-10-24T16:00:00.000Z</published>
    <updated>2016-03-27T08:26:11.160Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;如果你不知道如何使用linux中的alias，那么看了这篇文章，你应该就能够了解如何使用了。&lt;br&gt;如果已经知道了如何使用，那么可以给我提出一些建议或意见。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;为何要使用alias&quot;&gt;&lt;a href=&quot;#为何要使用alias&quot; class=&quot;headerlink&quot; title=&quot;为何要使用alias&quot;&gt;&lt;/a&gt;为何要使用alias&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;可以简化命令。&lt;br&gt;在平常开发中，我们有时候会重复多次输入一条或多条复杂的命令。这样会很浪费时间，所以我们可以将一连串的命令简化成一个或几个简单的单词。如：&lt;br&gt;&lt;code&gt;gedit /etc/httpd/conf/httpd.conf&lt;/code&gt;&lt;br&gt;使用alias，建立&lt;code&gt;alias edithttp=&amp;quot;gedit /etc/httpd/conf/httpd.conf&amp;quot;&lt;/code&gt;&lt;br&gt;，我们只需要输入一个简单的单词：&lt;code&gt;edithttp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改系统默认的命令&lt;br&gt;有时候，不同版本的系统默认命令有区别，我们可以建立一个跟系统命令同名的alias来覆盖系统的命令。&lt;br&gt;如：&lt;code&gt;alias ls=&amp;quot;ls -a&amp;quot;&lt;/code&gt;，这样ls就可以显示包括隐藏的文件了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;纠正拼写错误&lt;br&gt;有时候，由于手癌，会打错一些单词，而且还坑爹的发现不了，所以我们可以建立如下&lt;code&gt;alias pdw=&amp;#39;pwd&amp;#39;&lt;/code&gt;&lt;br&gt;这样，当打错的时候，也能正常执行命令了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使命令更安全&lt;br&gt;我们可以将&lt;code&gt;rm&lt;/code&gt;,&lt;code&gt;cp&lt;/code&gt;等命令修改为交互的命令，这样不至于错手删了或者覆盖了一些重要的文件。如：&lt;code&gt;alias rm=&amp;#39;rm -i&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以统一不同字符界面的命令&lt;br&gt;如在DOS界面下，&lt;code&gt;dir&lt;/code&gt;的作用相当于&lt;code&gt;ls&lt;/code&gt;，&lt;code&gt;del&lt;/code&gt;相当于&lt;code&gt;rm -i&lt;/code&gt;。所以可以建立如下：&lt;br&gt;&lt;code&gt;alias dir=&amp;#39;ls&amp;#39;&lt;/code&gt;&lt;br&gt;&lt;code&gt;alias del=&amp;#39;rm&amp;#39;&lt;/code&gt;&lt;br&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;如何使用alias&quot;&gt;&lt;a href=&quot;#如何使用alias&quot; class=&quot;headerlink&quot; title=&quot;如何使用alias&quot;&gt;&lt;/a&gt;如何使用alias&lt;/h3&gt;&lt;p&gt;使用alias的基础语法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias [name=&amp;quot;value&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注意：这里的等号两边&lt;strong&gt;不能加空格&lt;/strong&gt;，一些人习惯在等号两边加空格，加了就不行了。&lt;/p&gt;
&lt;h4 id=&quot;短暂使用&quot;&gt;&lt;a href=&quot;#短暂使用&quot; class=&quot;headerlink&quot; title=&quot;短暂使用&quot;&gt;&lt;/a&gt;短暂使用&lt;/h4&gt;&lt;p&gt;如果只是想暂时使用，则只需要打开终端根据语法输入即可，如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias p=&amp;quot;pwd&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;则使用p命令即可显示当前目录。&lt;br&gt;在终端中直接使用alias的作用范围仅限当前会话，图形界面下即仅限&lt;strong&gt;当前终端&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&quot;长期使用&quot;&gt;&lt;a href=&quot;#长期使用&quot; class=&quot;headerlink&quot; title=&quot;长期使用&quot;&gt;&lt;/a&gt;长期使用&lt;/h4&gt;&lt;p&gt;如果需要长期使用alias，则需要修改相应的配置文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;某一个用户长期使用&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入home目录下那个用户的文件夹，修改.bashrc文件&lt;br&gt; 一般来说可以使用如下命令：&lt;code&gt;vim ~/.bashrc&lt;/code&gt;&lt;br&gt;如果你用的是其他的shell,就编辑相应的配置文件。&lt;br&gt;如我用的是&lt;code&gt;zsh&lt;/code&gt;,就编辑&lt;code&gt;.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跳转到文件末尾&lt;br&gt; 使用&lt;code&gt;:$&lt;/code&gt;命令，可以跳转到文件末尾，按I进入insert模式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;添加alias&lt;br&gt; 在linux中，链接多条命令的一个简单的方法就是使用&amp;amp;&amp;amp;。这个操作符可以让一系列命令连起来执行，并且只有前一个命令成功执行时，才执行后一个命令。&lt;br&gt;所以，你可以将上面的命令写成如下:&lt;code&gt;alias lsl=&amp;quot;cd .. &amp;amp;&amp;amp; ls -l&amp;quot;&lt;/code&gt;&lt;br&gt;只需要在文件最后添加这行代码就可以了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;保存退出&lt;br&gt;按ESC退出insert模式，输入&lt;code&gt;:wq&lt;/code&gt;，回车，保存退出。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;重启bash&lt;br&gt;关掉终端，再打开就行了，也可以输入&lt;code&gt;source ~/.bashrc&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;所有用户长期使用&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;使用root登陆，修改&lt;code&gt;/etc/bash.bashrc&lt;/code&gt;（我用的zsh，配置文件在&lt;code&gt;/etc/zsh/zshrc&lt;/code&gt;）&lt;/li&gt;
&lt;li&gt;其他同上&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;配置完之后，就可以使用你的简写的命令了～！&lt;/p&gt;
&lt;h3 id=&quot;取消alias&quot;&gt;&lt;a href=&quot;#取消alias&quot; class=&quot;headerlink&quot; title=&quot;取消alias&quot;&gt;&lt;/a&gt;取消alias&lt;/h3&gt;&lt;p&gt;取消alias的基本语法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unalias name(s)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;unalias除了可以取消当前会话的alias，也可以取消在配置文件中的alias。&lt;br&gt;如果在当前会话使用，则作用范围也仅限当前会话（当前终端）。&lt;br&gt;如果想永久移除配置文件中的alias，只需要把语句删掉，重启终端或重新读取配置文件即可。&lt;br&gt;参考自：&lt;a href=&quot;http://www.linfo.org/alias.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.linfo.org/alias.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;如果你不知道如何使用linux中的alias，那么看了这篇文章，你应该就能够了解如何使用了。&lt;br&gt;如果已经知道了如何使用，那么可以给我提出一些建议或意见。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
    
    </summary>
    
      <category term="ubuntu" scheme="http://limaolong.cn/categories/ubuntu/"/>
    
    
      <category term="alias" scheme="http://limaolong.cn/tags/alias/"/>
    
      <category term="ubuntu" scheme="http://limaolong.cn/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>如何科学的上网</title>
    <link href="http://limaolong.cn/2015/09/18/how_to_FK_GFW/"/>
    <id>http://limaolong.cn/2015/09/18/how_to_FK_GFW/</id>
    <published>2015-09-17T16:00:00.000Z</published>
    <updated>2016-03-17T06:26:01.979Z</updated>
    
    <content type="html">&lt;p&gt;为了构建和谐社会，我国建立起强大的网络城墙，保护我们免受境外有害信息的荼毒。&lt;br&gt;作为社会主义和谐社会的一员，我们来学习一下如何科学的上网！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;使用OPENSHIFT&quot;&gt;&lt;a href=&quot;#使用OPENSHIFT&quot; class=&quot;headerlink&quot; title=&quot;使用OPENSHIFT&quot;&gt;&lt;/a&gt;使用OPENSHIFT&lt;/h3&gt;&lt;p&gt;详情请见：&lt;a href=&quot;http://andy-yao.me/2015/09/06/HOW-TO-FUCK-GFW/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HOW TO FUCK GFW&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;使用getlantern&quot;&gt;&lt;a href=&quot;#使用getlantern&quot; class=&quot;headerlink&quot; title=&quot;使用getlantern&quot;&gt;&lt;/a&gt;使用getlantern&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载lantern。&lt;br&gt;Windows：&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta.exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;br&gt;Linux 32bit：&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-32-bit.deb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;br&gt;Linux 64bit：&lt;a href=&quot;https://raw.githubusercontent.com/getlantern/lantern-binaries/master/lantern-installer-beta-64-bit.deb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;br&gt;最新版本请访问如下地址：&lt;a href=&quot;https://github.com/getlantern/lantern&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/getlantern/lantern&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;下载好之后，&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu：直接打开&lt;code&gt;lantern-installer-beta-64-bit.deb&lt;/code&gt;，进行安装。&lt;/li&gt;
&lt;li&gt;Windows：双击运行&lt;code&gt;lantern-installer-beta.exe&lt;/code&gt;，直接进行安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;安装之后，搜索lantern，直接打开。&lt;/li&gt;
&lt;li&gt;正常情况下，会自动打开浏览器（一般是Chrome）。&lt;/li&gt;
&lt;li&gt;此时，即可科学的上网。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;其他Linux，打开终端，输入：&quot;&gt;&lt;a href=&quot;#其他Linux，打开终端，输入：&quot; class=&quot;headerlink&quot; title=&quot;其他Linux，打开终端，输入：&quot;&gt;&lt;/a&gt;其他Linux，打开终端，输入：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;1. `git clone https://github.com/getlantern/lantern.git`
2. `cd lantern`
3. `make lantern`
4. `./lantern`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PS：如果lantern并不是很稳定，先卸载迅雷、XX管家、XX卫士再试试看，如果不行，可使用XX-net。&lt;/p&gt;
&lt;h3 id=&quot;使用XX-net&quot;&gt;&lt;a href=&quot;#使用XX-net&quot; class=&quot;headerlink&quot; title=&quot;使用XX-net&quot;&gt;&lt;/a&gt;使用XX-net&lt;/h3&gt;&lt;p&gt;本教程使用的浏览器是Chrome浏览器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载XX-net&lt;br&gt;测试版：&lt;a href=&quot;https://codeload.github.com/XX-net/XX-Net/zip/2.8.10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;br&gt;稳定版：&lt;a href=&quot;https://codeload.github.com/XX-net/XX-Net/zip/2.8.9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击下载&lt;/a&gt;&lt;br&gt;其他版本以及集成的浏览器等请见：&lt;a href=&quot;https://github.com/XX-net/XX-Net&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/XX-net/XX-Net&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装SwitchyOmega&lt;br&gt;打开Chrome浏览器，点击右上角，选择更多工具(more tools)，点击扩展程序（Extensions）。&lt;br&gt;解压下载的XX-net，打开文件夹，进入SwitchyOmega文件夹，将扩展名为crx的文件拖到扩展程序，直接安装。&lt;br&gt;接着，进入SwitchyOmege配置页面，选则导入/导出，将SwitchyOmega文件夹里的扩展名为bak的配置文件导入进去。&lt;br&gt;点击右上角的圆圈，选择自动切换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行XX-net&lt;br&gt;Windows用户：下载后之后，直接解压，打开根目录，点击start.bat运行，会自动打开浏览器的配置页面，如果状态正常此时即可科学上网了。&lt;br&gt;Linux用户：解压之后，进入XX-net文件夹，直接运行./start.sh，打开浏览器即可上网。&lt;br&gt;PS：在不配置的情况下，默认使用公共ID，无法下载，无法看视频。若要部署自己的APPID，请看：&lt;a href=&quot;https://github.com/XX-net/XX-Net/wiki/how-to-create-my-appids&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/XX-net/XX-Net/wiki/how-to-create-my-appids&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;为了构建和谐社会，我国建立起强大的网络城墙，保护我们免受境外有害信息的荼毒。&lt;br&gt;作为社会主义和谐社会的一员，我们来学习一下如何科学的上网！&lt;/p&gt;
    
    </summary>
    
      <category term="others" scheme="http://limaolong.cn/categories/others/"/>
    
    
      <category term="GFW" scheme="http://limaolong.cn/tags/GFW/"/>
    
      <category term="翻墙" scheme="http://limaolong.cn/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="lantern" scheme="http://limaolong.cn/tags/lantern/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu下mysql，php以及apache的安装和配置</title>
    <link href="http://limaolong.cn/2015/07/16/lamp/"/>
    <id>http://limaolong.cn/2015/07/16/lamp/</id>
    <published>2015-07-15T16:00:00.000Z</published>
    <updated>2016-03-17T07:00:45.349Z</updated>
    
    <content type="html">&lt;p&gt;之前，每次安装都是乱七八糟的就搞好了，然后并没有一个好的完整的记录过程，所以导致之后弄的时候，有时候很顺，有时候就问题一大堆。&lt;br&gt;所以，这次就打算把整个过程记下来，一来供以后参考，二来可以与其他人讨论一下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Apache&quot;&gt;&lt;a href=&quot;#Apache&quot; class=&quot;headerlink&quot; title=&quot;Apache&quot;&gt;&lt;/a&gt;Apache&lt;/h2&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;使用以下命令安装apache2：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过apt方式安装的，一般来说，apache的目录为&lt;code&gt;/etc/apache2&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;默认的网站根目录为&lt;code&gt;/var/www/html&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;启动apache的命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service apache2 start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重启和停止的命令只要把&lt;code&gt;start&lt;/code&gt;改为&lt;code&gt;restart&lt;/code&gt;和&lt;code&gt;stop&lt;/code&gt;就可以了。&lt;/p&gt;
&lt;h3 id=&quot;测试&quot;&gt;&lt;a href=&quot;#测试&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;测试apache2是否安装成功，在浏览器地址栏内输入&lt;code&gt;127.0.0.1&lt;/code&gt;或者&lt;code&gt;(http://localhost/)&lt;/code&gt;，如果页面显示&lt;code&gt;it works&lt;/code&gt;。那么，apache就安装成功了。&lt;/p&gt;
&lt;h2 id=&quot;PHP&quot;&gt;&lt;a href=&quot;#PHP&quot; class=&quot;headerlink&quot; title=&quot;PHP&quot;&gt;&lt;/a&gt;PHP&lt;/h2&gt;&lt;h3 id=&quot;安装-1&quot;&gt;&lt;a href=&quot;#安装-1&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;使用以下命令安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install php5 libapache2-mod-php5
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着根据需要安装PHP其他扩展：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install php5-mysql php5-curl php5-gd php5-intl php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-ming php5-ps php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;把不需要的扩展删掉即可，每个扩展用空格分离。一般需要安装&lt;code&gt;php5-mysql  php5-mcrypt php-pear&lt;/code&gt;等扩展。&lt;/p&gt;
&lt;p&gt;执行完之后，PHP已经安装完成。&lt;/p&gt;
&lt;h3 id=&quot;测试-1&quot;&gt;&lt;a href=&quot;#测试-1&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;phpinfo()&lt;/code&gt;函数来测试PHP是否已经安装成功。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /var/www/html/test.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在&lt;code&gt;test.php&lt;/code&gt;中输入一下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php phpinfo(); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后在浏览器中输入&lt;code&gt;localhost/test.php&lt;/code&gt;来查看，若能成功看到php的配置信息，则说明PHP安装成功。&lt;/p&gt;
&lt;h2 id=&quot;MySQL&quot;&gt;&lt;a href=&quot;#MySQL&quot; class=&quot;headerlink&quot; title=&quot;MySQL&quot;&gt;&lt;/a&gt;MySQL&lt;/h2&gt;&lt;h3 id=&quot;安装-2&quot;&gt;&lt;a href=&quot;#安装-2&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;使用以下命令安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-server-5.5 libapache2-mod-auth-mysql
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装过程中，会提示你设定MySQL的root用户名的密码。&lt;/p&gt;
&lt;h3 id=&quot;测试-2&quot;&gt;&lt;a href=&quot;#测试-2&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;Ctrl+Alt+T打开终端&lt;br&gt;输入一下命令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;`mysql -uroot -p`
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;回车后输入你刚才设置的密码。(-u 后面跟的是用户名，我的同户名是root)&lt;br&gt;如果能成功进入，则安装成功。&lt;br&gt;至此，恭喜你，LAMP环境已经安装完成。&lt;/p&gt;
&lt;h2 id=&quot;phpmyadmin&quot;&gt;&lt;a href=&quot;#phpmyadmin&quot; class=&quot;headerlink&quot; title=&quot;phpmyadmin&quot;&gt;&lt;/a&gt;phpmyadmin&lt;/h2&gt;&lt;h3 id=&quot;安装-3&quot;&gt;&lt;a href=&quot;#安装-3&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;使用一下命令安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install phpmyadmin
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装的过程中，有几个东西需要填写或者设置。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择服务器软件，这里选择之前安装的apache&lt;/li&gt;
&lt;li&gt;输入之前安装MYSQL的root密码&lt;/li&gt;
&lt;li&gt;设置phpmyadmin的root用户的密码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装完成后需要将phpmyadmin的配置文件包含到apache的配置中去，否则在浏览器输入&lt;code&gt;localhost/phpmyadmin&lt;/code&gt;会提示&lt;code&gt;Not Found&lt;/code&gt;。编辑&lt;code&gt;apache2.conf&lt;/code&gt;：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/apache2/apahce2.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在文件中的#Include list of ports to listen to段落下面，添加一下行代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Include /etc/phpmyadmin/apache.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;重启服务器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;除上述方法外，我们还可以建一个链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ln -s /usr/share/phpmyadmin/ /var/www/html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样，也能访问phpmyadmin了。上面两种方法选其中一个就行了。&lt;/p&gt;
&lt;h3 id=&quot;测试-3&quot;&gt;&lt;a href=&quot;#测试-3&quot; class=&quot;headerlink&quot; title=&quot;测试&quot;&gt;&lt;/a&gt;测试&lt;/h3&gt;&lt;p&gt;打开浏览器，输入localhost/phpmyadmin&lt;br&gt;能打开，则说明安装成功。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前，每次安装都是乱七八糟的就搞好了，然后并没有一个好的完整的记录过程，所以导致之后弄的时候，有时候很顺，有时候就问题一大堆。&lt;br&gt;所以，这次就打算把整个过程记下来，一来供以后参考，二来可以与其他人讨论一下。&lt;/p&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://limaolong.cn/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://limaolong.cn/tags/PHP/"/>
    
      <category term="Mysql" scheme="http://limaolong.cn/tags/Mysql/"/>
    
      <category term="LAMP" scheme="http://limaolong.cn/tags/LAMP/"/>
    
      <category term="Apache" scheme="http://limaolong.cn/tags/Apache/"/>
    
  </entry>
  
  <entry>
    <title>几个简单的Github操作</title>
    <link href="http://limaolong.cn/2015/06/13/simple_exercises_of_github/"/>
    <id>http://limaolong.cn/2015/06/13/simple_exercises_of_github/</id>
    <published>2015-06-12T16:00:00.000Z</published>
    <updated>2016-03-17T06:27:31.891Z</updated>
    
    <content type="html">&lt;h2 id=&quot;如何使用GitHub&quot;&gt;&lt;a href=&quot;#如何使用GitHub&quot; class=&quot;headerlink&quot; title=&quot;如何使用GitHub&quot;&gt;&lt;/a&gt;如何使用GitHub&lt;/h2&gt;&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解如何创建和使用代码库&lt;/li&gt;
&lt;li&gt;了解创建并管理分支&lt;/li&gt;
&lt;li&gt;了解如何将修改过的文件提交到代码库&lt;/li&gt;
&lt;li&gt;开启并合并一个上传请求&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;创建代码库（远程仓库-repository）&quot;&gt;&lt;a href=&quot;#创建代码库（远程仓库-repository）&quot; class=&quot;headerlink&quot; title=&quot;创建代码库（远程仓库/repository）&quot;&gt;&lt;/a&gt;创建代码库（远程仓库/repository）&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;点击右上角的+号下拉菜单，选择创建代码库（&lt;code&gt;New repository&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;输入仓库的名字，比如hello-world。&lt;/li&gt;
&lt;li&gt;对仓库进行简短的描述。&lt;/li&gt;
&lt;li&gt;选择仓库类型，目前公开的是免费的，私有的需要付费，视个人情况而定。&lt;/li&gt;
&lt;li&gt;接着选择用README文件初始化仓库，同时根据需要选择代码的证书。&lt;br&gt;如下图：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/create-new-repo.png&quot; alt=&quot;create repository&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建分支&quot;&gt;&lt;a href=&quot;#创建分支&quot; class=&quot;headerlink&quot; title=&quot;创建分支&quot;&gt;&lt;/a&gt;创建分支&lt;/h3&gt;&lt;p&gt;一般一个项目开发，最起码有4个分支：产品分支(&lt;code&gt;product&lt;/code&gt;)、测试分支(&lt;code&gt;test&lt;/code&gt;)、开发分支(&lt;code&gt;development&lt;/code&gt;)、主分支(&lt;code&gt;master&lt;/code&gt;).&lt;br&gt;如果需要开发几个大的功能，而且是团队开发，那么需要在dev的基础上创建自己的分支，即创建一个dev分支的复制。&lt;br&gt;如下图，展示了feature分支完整的生命周期。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/branching.png&quot; alt=&quot;分支生命周期&quot;&gt;&lt;/p&gt;
&lt;p&gt;现在，我们只演示一下如何在master分支上创建分支。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;进入刚才创建的代码库的页面。&lt;/li&gt;
&lt;li&gt;点击分支的下拉框，在搜索框内输入新的分支名字，如readme-edits&lt;/li&gt;
&lt;li&gt;点击创建分支&lt;br&gt;如下图：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/readme-edits.gif&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;修改代码并提交-commit-修改&quot;&gt;&lt;a href=&quot;#修改代码并提交-commit-修改&quot; class=&quot;headerlink&quot; title=&quot;修改代码并提交(commit)修改&quot;&gt;&lt;/a&gt;修改代码并提交(&lt;code&gt;commit&lt;/code&gt;)修改&lt;/h3&gt;&lt;p&gt;现在，我们的代码库有2个分支：master和readme-edits。&lt;br&gt;我们在readme-edits分支上，对本来的readme文件进行修改，然后将改动提交上去。&lt;br&gt;每次提交修改的时候，我们需要输入一些备注，这样可以让别人看到你修改的目的和内容等等，同时也帮助自己以后对项目的复看(&lt;code&gt;review&lt;/code&gt;)。&lt;br&gt;接下来，我们进行文件修改和提交：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击打开README.md的文件&lt;/li&gt;
&lt;li&gt;点击右侧的修改按钮(铅笔形状)，进入修改页面。&lt;/li&gt;
&lt;li&gt;对文件进行修改&lt;/li&gt;
&lt;li&gt;之后，输入备注&lt;/li&gt;
&lt;li&gt;选择是否创建新的分支，还是提交到当前分支，默认提交到当前分支&lt;/li&gt;
&lt;li&gt;点击提交修改&lt;br&gt;具体操作如下图：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/commit.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;建立一个上传请求-Pull-Request&quot;&gt;&lt;a href=&quot;#建立一个上传请求-Pull-Request&quot; class=&quot;headerlink&quot; title=&quot;建立一个上传请求(Pull Request)&quot;&gt;&lt;/a&gt;建立一个上传请求(&lt;code&gt;Pull Request&lt;/code&gt;)&lt;/h3&gt;&lt;p&gt;经过上述步骤后，我们想比较master进行，进行了修改，而且提交了修改，这时候，我们需要发送一次请求，将修改合并到master分支上。&lt;br&gt;现在，来创建一个上传请求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击&lt;code&gt;Pull Request&lt;/code&gt;标签，进入页面，点击创建新请求(&lt;code&gt;New pull request&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/pr-tab.gif&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择创建的分支，与master分支，进行比较&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/pick-branch.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;浏览你做的修改，并和master分支进行比较，确保是你想要提交的东西。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/diff.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当你确保这些修改是你想要提交的修改，点击绿色的创建上传按钮。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/create-pr.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;给你的这次请求写一个标题，同时写简短的描述&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/pr-form.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;允许请求，合并代码&quot;&gt;&lt;a href=&quot;#允许请求，合并代码&quot; class=&quot;headerlink&quot; title=&quot;允许请求，合并代码&quot;&gt;&lt;/a&gt;允许请求，合并代码&lt;/h3&gt;&lt;p&gt;最后，将readme-edits分支合并到master分支：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点击合并请求按钮，将分支合并到master分支&lt;/li&gt;
&lt;li&gt;点击确认合并&lt;/li&gt;
&lt;li&gt;当合并完成后，就可以删除readme-edits分支了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/merge-button.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://guides.github.com/activities/hello-world/delete-button.png&quot; alt=&quot;此处输入图片的描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;至此，已经完成了Github的一些基本操作。&lt;/p&gt;
&lt;p&gt;本文原文：&lt;a href=&quot;https://guides.github.com/activities/hello-world/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://guides.github.com/activities/hello-world/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;如何使用GitHub&quot;&gt;&lt;a href=&quot;#如何使用GitHub&quot; class=&quot;headerlink&quot; title=&quot;如何使用GitHub&quot;&gt;&lt;/a&gt;如何使用GitHub&lt;/h2&gt;&lt;p&gt;目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解如何创建和使用代码库&lt;/li&gt;
&lt;li&gt;了解创建并管理分支&lt;/li&gt;
&lt;li&gt;了解如何将修改过的文件提交到代码库&lt;/li&gt;
&lt;li&gt;开启并合并一个上传请求&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Git" scheme="http://limaolong.cn/categories/Git/"/>
    
    
      <category term="Github" scheme="http://limaolong.cn/tags/Github/"/>
    
      <category term="Git" scheme="http://limaolong.cn/tags/Git/"/>
    
  </entry>
  
</feed>
